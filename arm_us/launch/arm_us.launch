<launch>

	<!-- Mode verbose off by default -->
	<arg name="verbose" default="0"/>
	<!-- Mode simulation off by default -->
	<arg name="simulation" default="0"/>
	<!-- Controller connected, on by default -->
	<arg name="controller" default="1"/>

	<!-- If mode real, start communication with dynamixels -->
	<group if="$(eval arg('simulation') == 0)">
		<node name="dynamixel_interface_node" pkg="dynamixel_interface" type="dynamixel_interface_controller_node" output="screen">
			<rosparam command="load" file="$(find arm_us)/config/motor_config.yaml"/>
		</node>
	</group>
	
	<!-- Verbose mode -->
	<group if="$(eval arg('verbose') == 0)">
		<!-- Master node -->
		<node name="master_node" pkg="arm_us" type="arm_us_node">
			<param name="control_mode" value="$(arg simulation)"/>
			<rosparam file="$(find arm_us)/config/controller_config.yaml"/>
		</node>
		<!-- Service node to calculate inverse kinematics of arm -->
		<node name="inv_kin_calc_service" pkg="arm_us" type="inv_kin_calc_service.py"/>
		<!-- Motor interface node for joint limits -->
		<node name="motor_translator" pkg="arm_us" type="motor_translator">
			<rosparam file="$(find arm_us)/config/joint_limit.yaml"/>
		</node>
	</group>
	<group if="$(eval arg('verbose') == 1)">
		<!-- Master node -->
		<node name="master_node" pkg="arm_us" type="arm_us_node" output="screen">
			<param name="control_mode" value="$(arg simulation)"/>
			<rosparam file="$(find arm_us)/config/controller_config.yaml"/>
		</node>
		<!-- Service node to calculate inverse kinematics of arm -->
		<node name="inv_kin_calc_service" pkg="arm_us" type="inv_kin_calc_service.py" output="screen"/>
		<!-- Motor interface node for joint limits -->
		<node name="motor_translator" pkg="arm_us" type="motor_translator" output="screen">
			<rosparam file="$(find arm_us)/config/joint_limit.yaml"/>
		</node>
	</group>

	<!-- Communication with controller -->
	<group if="$(eval arg('controller') == 1)">
		<node name="joy" pkg="joy" type="joy_node"/>
	</group>

	<!-- Real time position of arm in Rviz -->
	<node name="arm_us_graphic" pkg="arm_us_graph" type="graph"/>

	<!-- Starting rviz with config -->
	<node name="rviz" type="rviz" pkg="rviz" args="-d $(find arm_us)/config/rviz_config.rviz"/>
	
	<!-- Start GUI node and RQT -->
  	<!-- <node name = "arm_us_dashboard" pkg = "rqt_gui" type = "rqt_gui" respawn = "false" output = "screen"/> -->
  	
</launch>
